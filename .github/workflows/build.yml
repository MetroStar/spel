name: Build STIGed AMI's

on:
  workflow_dispatch:
    inputs:
      public:
        description: "Set AMI's to public"
        required: true
        default: true
        type: boolean
      develop:
        description: "Set AMI's to develop"
        required: true
        default: false
        type: boolean
      run_centos9:
        description: "Run CentOS 9 Stream builder"
        required: false
        default: false
        type: boolean
      run_ol9:
        description: "Run Oracle Linux 9 builder"
        required: false
        default: false
        type: boolean
      run_rhel9:
        description: "Run RHEL 9 builder"
        required: false
        default: false
        type: boolean
      run_ol8:
        description: "Run Oracle Linux 8 builder"
        required: false
        default: false
        type: boolean
      run_rhel8:
        description: "Run RHEL 8 builder"
        required: false
        default: false
        type: boolean

  schedule:
    - cron: '0 9 1 * *'

permissions:
  id-token: write
  contents: write

jobs:
  build:
    name: Build SPEL AMI's
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::879381286673:role/Packer_Amazon
          role-duration-seconds: 43200

      - name: Set up environment
        run: |
          echo "Setting up environment variables"

          echo "PUBLIC=${{ github.event.inputs.public }}" >> $GITHUB_ENV
          echo "SPEL_IDENTIFIER=spel" >> $GITHUB_ENV

          builders=""
          if [[ "${{ github.event.inputs.run_centos9 }}" == "true" ]]; then
            builders+="amazon-ebssurrogate.minimal-centos-9stream-hvm,"
          fi
          if [[ "${{ github.event.inputs.run_ol9 }}" == "true" ]]; then
            builders+="amazon-ebssurrogate.minimal-ol-9-hvm,"
          fi
          if [[ "${{ github.event.inputs.run_rhel9 }}" == "true" ]]; then
            builders+="amazon-ebssurrogate.minimal-rhel-9-hvm,"
          fi
          if [[ "${{ github.event.inputs.run_ol8 }}" == "true" ]]; then
            builders+="amazon-ebssurrogate.minimal-ol-8-hvm,"
          fi
          if [[ "${{ github.event.inputs.run_rhel8 }}" == "true" ]]; then
            builders+="amazon-ebssurrogate.minimal-rhel-8-hvm,"
          fi
          builders="${builders%,}"
          echo "SPEL_BUILDERS=$builders" >> $GITHUB_ENV

          if [ "${{ github.event.inputs.develop }}" == "true" ]; then
            echo "SPEL_VERSION=$(date +%Y.%m).dev" >> $GITHUB_ENV
            echo "PKR_VAR_aws_force_deregister=true" >> $GITHUB_ENV
            echo "PKR_VAR_aws_ami_regions=[\"us-east-1\"]" >> $GITHUB_ENV
          else
            echo "SPEL_VERSION=$(date +%Y.%m).1" >> $GITHUB_ENV
            echo "PKR_VAR_aws_ami_regions=[\"us-east-1\",\"us-east-2\",\"us-west-1\",\"us-west-2\"]" >> $GITHUB_ENV
          fi

          if [ "${{ github.event.inputs.public }}" == "true" ]; then
            echo "PKR_VAR_aws_ami_groups=[\"all\"]" >> $GITHUB_ENV
          else
            echo "PKR_VAR_aws_ami_groups=[]" >> $GITHUB_ENV
          fi

          echo "PKR_VAR_aws_region=us-east-1" >> $GITHUB_ENV
          echo "PACKER_GITHUB_API_TOKEN=${{ secrets.PACKER_GITHUB_API_TOKEN }}" >> $GITHUB_ENV

          echo "AWS_COMMERCIAL_ACCESS_KEY_ID=${{ secrets.AWS_COMMERCIAL_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_COMMERCIAL_SECRET_ACCESS_KEY=${{ secrets.AWS_COMMERCIAL_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_GOVCLOUD_ACCESS_KEY_ID=${{ secrets.AWS_GOVCLOUD_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_GOVCLOUD_SECRET_ACCESS_KEY=${{ secrets.AWS_GOVCLOUD_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV

      - name: Install necessary packages
        run: |
          sudo apt-get update -y && sudo apt-get install -y \
            xz-utils \
            curl \
            jq \
            unzip \
            make \
            vim \
            build-essential \
            libssl-dev \
            zlib1g-dev \
            libbz2-dev \
            libreadline-dev \
            libsqlite3-dev \
            llvm \
            libncursesw5-dev \
            tk-dev \
            libxml2-dev \
            libxmlsec1-dev \
            libffi-dev \
            liblzma-dev \
            && sudo rm -rf /var/lib/apt/lists/*

      - name: Install Packer
        run: |
          make -f Makefile.spel install

      - name: Build STIGed AMI's
        run: |
          make -f Makefile.spel build

      - name: Copy STIGed AMI's to GovCloud
        if: github.event.inputs.develop == 'false'
        run: |
          make -f Makefile.spel copy

      - name: Check if README.md needs update
        id: check_readme
        run: |
          if grep -q "$(date +%Y.%m)" README.md; then
            echo "update_needed=false" >> $GITHUB_OUTPUT
          else
            echo "update_needed=true" >> $GITHUB_OUTPUT
          fi

      - name: Update README.md with current month
        if: steps.check_readme.outputs.update_needed == 'true'
        run: |
          sed -i "s/$(date -d 'last month' +%Y.%m)/$(date +%Y.%m)/g" README.md
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -a -m "Bump version to $(date +%Y.%m).1"
          git push
